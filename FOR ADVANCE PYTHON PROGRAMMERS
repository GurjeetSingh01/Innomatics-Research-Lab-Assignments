#EXECUTED BY GURJEET SINGH


#TASK---1--->

class Solution(object):
    def runningSum(self, gg):     
        g = len(gg)
        f1 = list()
        
        if g == 0: return f1
		
        currentSum = 0
        for i in range(g):
            currentSum += gg[i]
            f1.append(currentSum)
        
        return f1



#TASK---2--->

class Solution:
    def shuffle(self, nums, n):
        gg = []
        for g in range(n):
            gg.append(nums[g])
            gg.append(nums[g+n])
            
        return gg



#TASK---3--->

class Solution:
#     O(n) || O(1)
# Runtime: 54ms 64.17% memory: 13.9mb 62.75%
    def kidsWithCandies(self, candies: List[int], extraCandies: int) -> List[bool]:
        maxCandie = max(candies)
        for gg, val in enumerate(candies):
            # candies[gg] = True if not (val + extraCandies) < maxCandie else False
            candies[gg] =  not (val + extraCandies) < maxCandie
        
        return candies
	
	
	
	
	
#THANKS:)
